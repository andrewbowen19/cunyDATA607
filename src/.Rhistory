tidy_books %>%
filter(book == "Emma") %>%
inner_join(nrc_joy) %>%
count(word, sort = TRUE)
jane_austen_sentiment <- tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(book, index = linenumber %/% 80, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative)
# Plotting the sentiment scores
ggplot(jane_austen_sentiment, aes(index, sentiment, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
get_sentiments("nrc") %>%
filter(sentiment %in% c("positive", "negative")) %>%
count(sentiment)
get_sentiments("bing") %>%
count(sentiment)
bing_word_counts <- tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts %>%
group_by(sentiment) %>%
slice_max(n, n = 10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment",
y = NULL)
custom_stop_words <- bind_rows(tibble(word = c("miss"),
lexicon = c("custom")),
stop_words)
tidy_books %>%
anti_join(stop_words) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("gray20", "gray80"),
max.words = 100)
p_and_p_sentences <- tibble(text = prideprejudice) %>%
unnest_tokens(sentence, text, token = "sentences")
# can also split tokens via regex
austen_chapters <- austen_books() %>%
group_by(book) %>%
unnest_tokens(chapter, text, token = "regex",
pattern = "Chapter|CHAPTER [\\dIVXLC]") %>%
ungroup()
austen_chapters %>%
group_by(book) %>%
summarise(chapters = n())
bingnegative <- get_sentiments("bing") %>%
filter(sentiment == "negative")
wordcounts <- tidy_books %>%
group_by(book, chapter) %>%
summarize(words = n())
tidy_books %>%
semi_join(bingnegative) %>%
group_by(book, chapter) %>%
summarize(negativewords = n()) %>%
left_join(wordcounts, by = c("book", "chapter")) %>%
mutate(ratio = negativewords/words) %>%
filter(chapter != 0) %>%
slice_max(ratio, n = 1) %>%
ungroup()
library(harrypotter)
library(sentimentr)
library(lexicon)
j_lexicon <- as.data.frame(lexicon::hash_sentiment_jockers)
j_lexicon <- j_lexicon %>%
rename("word" = "x", "score" = "y")
githubURL <- "https://github.com/andrewbowen19/cunyDATA607/blob/main/src/envHW7.RData" # "https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda"
cs <- load(file=githubURL)
library(tidytext)
library(tidyr)
library(janeaustenr)
library(dplyr)
library(stringr)
library(ggplot2)
library(wordcloud)
library(reshape2)
get_sentiments("afinn")
get_sentiments("bing")
get_sentiments("nrc")
tidy_books <- austen_books() %>%
group_by(book) %>%
mutate(
linenumber = row_number(),
chapter = cumsum(str_detect(text,
regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup() %>%
unnest_tokens(word, text)
nrc_joy <- get_sentiments("nrc") %>%
filter(sentiment == "joy")
tidy_books %>%
filter(book == "Emma") %>%
inner_join(nrc_joy) %>%
count(word, sort = TRUE)
jane_austen_sentiment <- tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(book, index = linenumber %/% 80, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative)
# Plotting the sentiment scores
ggplot(jane_austen_sentiment, aes(index, sentiment, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
get_sentiments("nrc") %>%
filter(sentiment %in% c("positive", "negative")) %>%
count(sentiment)
get_sentiments("bing") %>%
count(sentiment)
bing_word_counts <- tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts %>%
group_by(sentiment) %>%
slice_max(n, n = 10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment",
y = NULL)
custom_stop_words <- bind_rows(tibble(word = c("miss"),
lexicon = c("custom")),
stop_words)
tidy_books %>%
anti_join(stop_words) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("gray20", "gray80"),
max.words = 100)
p_and_p_sentences <- tibble(text = prideprejudice) %>%
unnest_tokens(sentence, text, token = "sentences")
# can also split tokens via regex
austen_chapters <- austen_books() %>%
group_by(book) %>%
unnest_tokens(chapter, text, token = "regex",
pattern = "Chapter|CHAPTER [\\dIVXLC]") %>%
ungroup()
austen_chapters %>%
group_by(book) %>%
summarise(chapters = n())
bingnegative <- get_sentiments("bing") %>%
filter(sentiment == "negative")
wordcounts <- tidy_books %>%
group_by(book, chapter) %>%
summarize(words = n())
tidy_books %>%
semi_join(bingnegative) %>%
group_by(book, chapter) %>%
summarize(negativewords = n()) %>%
left_join(wordcounts, by = c("book", "chapter")) %>%
mutate(ratio = negativewords/words) %>%
filter(chapter != 0) %>%
slice_max(ratio, n = 1) %>%
ungroup()
library(harrypotter)
library(sentimentr)
library(lexicon)
j_lexicon <- as.data.frame(lexicon::hash_sentiment_jockers)
j_lexicon <- j_lexicon %>%
rename("word" = "x", "score" = "y")
#philosophers_stone <- load(file="../data/philosophers_stone.rda")
#chamber_of_secrets <- load(file="../data/chamber_of_secrets.rda")
#prisoner_of_azkaban <- load(file="../data/prisoner_of_azkaban.rda")
#goblet_of_fire <- load(file="../data/goblet_of_fire.rda")
#order_of_the_phoenix <- load(file="../data/order_of_the_phoenix.rda")
#half_blood_prince <- load(file="../data/half_blood_prince.rda")
#deathly_hallows <- load(file="../data/deathly_hallows.rda")
#env <- readRDS("https://github.com/andrewbowen19/cunyDATA607/blob/main/src/envHW7.RData", gzip="rb")
text_cs <- tibble(chapter = seq_along(chamber_of_secrets),
text = chamber_of_secrets) %>%
unnest_tokens(word, text) %>%
mutate(book = "Chamber of Secrets")
cs_scores <- text_cs %>%
inner_join(j_lexicon) %>%
count(word, score,  sort = TRUE) %>%
ungroup()
cs_scores %>%
mutate(index = row_number()) %>%
ggplot( aes(index, score)) +
geom_col(show.legend = FALSE)
text_ps <- tibble(chapter = seq_along(philosophers_stone),
text = philosophers_stone) %>%
unnest_tokens(word, text) %>%
mutate(book = "Philosopher's Stone")
text_pa <- tibble(chapter = seq_along(prisoner_of_azkaban),
text = prisoner_of_azkaban) %>%
unnest_tokens(word, text) %>%
mutate(book = "Prisoner of Azkaban")
text_gf <- tibble(chapter = seq_along(goblet_of_fire),
text = goblet_of_fire) %>%
unnest_tokens(word, text) %>%
mutate(book = "Goblet of Fire")
text_op <- tibble(chapter = seq_along(order_of_the_phoenix),
text = order_of_the_phoenix) %>%
unnest_tokens(word, text) %>%
mutate(book = "Order of the Phoenix")
text_hb <- tibble(chapter = seq_along(half_blood_prince),
text = half_blood_prince) %>%
unnest_tokens(word, text) %>%
mutate(book = "Half-Blood Prince")
text_dh <- tibble(chapter = seq_along(deathly_hallows),
text = deathly_hallows) %>%
unnest_tokens(word, text) %>%
mutate(book = "Deathly Hallows")
df <- rbind(text_ps, text_cs, text_pa, text_gf, text_op, text_hb, text_dh)
df_sentiment <- df %>%
left_join(j_lexicon) %>%
count(book, index = c(1:nrow(df)), score)
# Plotting the sentiment scores
ggplot(df_sentiment, aes(index, score, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
philosophers_stone <- load(file="../data/philosophers_stone.rda")
#chamber_of_secrets <- load(file="../data/chamber_of_secrets.rda")
#prisoner_of_azkaban <- load(file="../data/prisoner_of_azkaban.rda")
#goblet_of_fire <- load(file="../data/goblet_of_fire.rda")
#order_of_the_phoenix <- load(file="../data/order_of_the_phoenix.rda")
#half_blood_prince <- load(file="../data/half_blood_prince.rda")
#deathly_hallows <- load(file="../data/deathly_hallows.rda")
#env <- readRDS("https://github.com/andrewbowen19/cunyDATA607/blob/main/src/envHW7.RData", gzip="rb")
philosophers_stone <- load(file="~/CUNY/cunyDATA607/data/philosophers_stone.rda")
#chamber_of_secrets <- load(file="../data/chamber_of_secrets.rda")
#prisoner_of_azkaban <- load(file="../data/prisoner_of_azkaban.rda")
#goblet_of_fire <- load(file="../data/goblet_of_fire.rda")
#order_of_the_phoenix <- load(file="../data/order_of_the_phoenix.rda")
#half_blood_prince <- load(file="../data/half_blood_prince.rda")
#deathly_hallows <- load(file="../data/deathly_hallows.rda")
#env <- readRDS("https://github.com/andrewbowen19/cunyDATA607/blob/main/src/envHW7.RData", gzip="rb")
philosophers_stone <- load(file="~/CUNY/cunyDATA607/data/philosophers_stone.rda")
#chamber_of_secrets <- load(file="../data/chamber_of_secrets.rda")
#prisoner_of_azkaban <- load(file="../data/prisoner_of_azkaban.rda")
#goblet_of_fire <- load(file="../data/goblet_of_fire.rda")
#order_of_the_phoenix <- load(file="../data/order_of_the_phoenix.rda")
#half_blood_prince <- load(file="../data/half_blood_prince.rda")
#deathly_hallows <- load(file="../data/deathly_hallows.rda")
#env <- readRDS("https://github.com/andrewbowen19/cunyDATA607/blob/main/src/envHW7.RData", gzip="rb")
philosophers_stone <- readRDS(file="~/CUNY/cunyDATA607/data/philosophers_stone.rda")
?readRDS
philosophers_stone <- readRDS(file="~/CUNY/cunyDATA607/data/philosophers_stone.rda")
philosophers_stone <- readRDS(file="../data/philosophers_stone.rda")
library(tidytext)
library(tidyr)
library(janeaustenr)
library(dplyr)
library(stringr)
library(ggplot2)
library(wordcloud)
library(reshape2)
get_sentiments("afinn")
get_sentiments("bing")
get_sentiments("nrc")
tidy_books <- austen_books() %>%
group_by(book) %>%
mutate(
linenumber = row_number(),
chapter = cumsum(str_detect(text,
regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup() %>%
unnest_tokens(word, text)
nrc_joy <- get_sentiments("nrc") %>%
filter(sentiment == "joy")
tidy_books %>%
filter(book == "Emma") %>%
inner_join(nrc_joy) %>%
count(word, sort = TRUE)
jane_austen_sentiment <- tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(book, index = linenumber %/% 80, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative)
# Plotting the sentiment scores
ggplot(jane_austen_sentiment, aes(index, sentiment, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
get_sentiments("nrc") %>%
filter(sentiment %in% c("positive", "negative")) %>%
count(sentiment)
get_sentiments("bing") %>%
count(sentiment)
bing_word_counts <- tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts %>%
group_by(sentiment) %>%
slice_max(n, n = 10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment",
y = NULL)
custom_stop_words <- bind_rows(tibble(word = c("miss"),
lexicon = c("custom")),
stop_words)
tidy_books %>%
anti_join(stop_words) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("gray20", "gray80"),
max.words = 100)
p_and_p_sentences <- tibble(text = prideprejudice) %>%
unnest_tokens(sentence, text, token = "sentences")
# can also split tokens via regex
austen_chapters <- austen_books() %>%
group_by(book) %>%
unnest_tokens(chapter, text, token = "regex",
pattern = "Chapter|CHAPTER [\\dIVXLC]") %>%
ungroup()
austen_chapters %>%
group_by(book) %>%
summarise(chapters = n())
bingnegative <- get_sentiments("bing") %>%
filter(sentiment == "negative")
wordcounts <- tidy_books %>%
group_by(book, chapter) %>%
summarize(words = n())
tidy_books %>%
semi_join(bingnegative) %>%
group_by(book, chapter) %>%
summarize(negativewords = n()) %>%
left_join(wordcounts, by = c("book", "chapter")) %>%
mutate(ratio = negativewords/words) %>%
filter(chapter != 0) %>%
slice_max(ratio, n = 1) %>%
ungroup()
library(harrypotter)
library(sentimentr)
library(lexicon)
j_lexicon <- as.data.frame(lexicon::hash_sentiment_jockers)
j_lexicon <- j_lexicon %>%
rename("word" = "x", "score" = "y")
philosophers_stone <- readRDS(file="../data/philosophers_stone.rda")
philosophers_stone <- readRDS(file="../data/philosophers_stone.rda")
philosophers_stone <- readRDS(file="../data/philosophers_stone.rda")
library(tidytext)
library(tidyr)
library(janeaustenr)
library(dplyr)
library(stringr)
library(ggplot2)
library(wordcloud)
library(reshape2)
get_sentiments("afinn")
get_sentiments("bing")
get_sentiments("nrc")
tidy_books <- austen_books() %>%
group_by(book) %>%
mutate(
linenumber = row_number(),
chapter = cumsum(str_detect(text,
regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup() %>%
unnest_tokens(word, text)
nrc_joy <- get_sentiments("nrc") %>%
filter(sentiment == "joy")
tidy_books %>%
filter(book == "Emma") %>%
inner_join(nrc_joy) %>%
count(word, sort = TRUE)
jane_austen_sentiment <- tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(book, index = linenumber %/% 80, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative)
# Plotting the sentiment scores
ggplot(jane_austen_sentiment, aes(index, sentiment, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
get_sentiments("nrc") %>%
filter(sentiment %in% c("positive", "negative")) %>%
count(sentiment)
get_sentiments("bing") %>%
count(sentiment)
bing_word_counts <- tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts %>%
group_by(sentiment) %>%
slice_max(n, n = 10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment",
y = NULL)
custom_stop_words <- bind_rows(tibble(word = c("miss"),
lexicon = c("custom")),
stop_words)
tidy_books %>%
anti_join(stop_words) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("gray20", "gray80"),
max.words = 100)
p_and_p_sentences <- tibble(text = prideprejudice) %>%
unnest_tokens(sentence, text, token = "sentences")
# can also split tokens via regex
austen_chapters <- austen_books() %>%
group_by(book) %>%
unnest_tokens(chapter, text, token = "regex",
pattern = "Chapter|CHAPTER [\\dIVXLC]") %>%
ungroup()
austen_chapters %>%
group_by(book) %>%
summarise(chapters = n())
bingnegative <- get_sentiments("bing") %>%
filter(sentiment == "negative")
wordcounts <- tidy_books %>%
group_by(book, chapter) %>%
summarize(words = n())
tidy_books %>%
semi_join(bingnegative) %>%
group_by(book, chapter) %>%
summarize(negativewords = n()) %>%
left_join(wordcounts, by = c("book", "chapter")) %>%
mutate(ratio = negativewords/words) %>%
filter(chapter != 0) %>%
slice_max(ratio, n = 1) %>%
ungroup()
library(harrypotter)
library(sentimentr)
library(lexicon)
j_lexicon <- as.data.frame(lexicon::hash_sentiment_jockers)
j_lexicon <- j_lexicon %>%
rename("word" = "x", "score" = "y")
philosophers_stone <- readRDS(file="../data/philosophers_stone.rda")
philosophers_stone <- load(file="../data/philosophers_stone.rda", verbose=TRUE)
#chamber_of_secrets <- load(file="../data/chamber_of_secrets.rda")
#prisoner_of_azkaban <- load(file="../data/prisoner_of_azkaban.rda")
#goblet_of_fire <- load(file="../data/goblet_of_fire.rda")
#order_of_the_phoenix <- load(file="../data/order_of_the_phoenix.rda")
#half_blood_prince <- load(file="../data/half_blood_prince.rda")
#deathly_hallows <- load(file="../data/deathly_hallows.rda")
#env <- readRDS("https://github.com/andrewbowen19/cunyDATA607/blob/main/src/envHW7.RData", gzip="rb")
?load
cs <_ load("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda")
cs <- load("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda")
cs <- load(url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda"))
?url
cs <- load(url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda", raw=TRUE))
cs <- load(url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda"))
cs <- load(gzcon(url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda")))
cs <- readRDS(gzcon(url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda")))
cs <- load(gzcon(url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda")))
?open
#cs <- load(gzcon(url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda")))
githubURL <- "https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda"
url(githubURL)
#cs <- load(gzcon(url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda")))
githubURL <- "https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda"
isOpen(url(githubURL))
#cs <- load(gzcon(url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda")))
githubURL <- "https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda"
open(url(githubURL))
#cs <- load(gzcon(url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda")))
githubURL <- "https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda"
open(url(githubURL), open="r")
#cs <- load(gzcon(url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda")))
githubURL <- url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda")
open(githubURL, open="r")
load(githubURL)
#cs <- load(gzcon(url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda")))
githubURL <- url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda")
con <- open(githubURL, open="r")
#load(githubURL)
#cs <- load(gzcon(url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda")))
githubURL <- url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda")
cs <- load(githubURL)
#cs <- load(gzcon(url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda")))
githubURL <- url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/?raw=true")
cs <- load(githubURL)
#cs <- load(gzcon(url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda")))
githubURL <- url("https://github.com/bradleyboehmke/harrypotter/blob/master/data/chamber_of_secrets.rda")
cs <- load(githubURL)
philosophers_stone <- load("../data/philosophers_stone.rda")
#chamber_of_secrets <- load(file="../data/chamber_of_secrets.rda")
#prisoner_of_azkaban <- load(file="../data/prisoner_of_azkaban.rda")
#goblet_of_fire <- load(file="../data/goblet_of_fire.rda")
#order_of_the_phoenix <- load(file="../data/order_of_the_phoenix.rda")
#half_blood_prince <- load(file="../data/half_blood_prince.rda")
#deathly_hallows <- load(file="../data/deathly_hallows.rda")
#env <- readRDS("https://github.com/andrewbowen19/cunyDATA607/blob/main/src/envHW7.RData", gzip="rb")
